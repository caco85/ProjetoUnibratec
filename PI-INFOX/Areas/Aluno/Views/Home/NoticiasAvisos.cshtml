@model PagedList.IPagedList<PI_INFOX.Models.Basicas.basAviso>

@{
    ViewBag.Title = "NoticiasAvisos";
}

<h3>Avisos em Destaques.</h3>
<hr />

 <table>
    <tr>
  
    @foreach (var item in Model)
    {
        <ul>
            <li>
                <h3>
                    @Html.DisplayFor(modelItem => item.titulo)
                </h3>
                <p>@Html.DisplayFor(modelItem => item.DataCadastro)</p>
                <p>@Html.DisplayFor(modelItem => item.messagemAviso)</p>
                 @Html.ActionLink("Mais",  "Index","aviso",routeValues: null, htmlAttributes: new { @class = "btn btn-info" })
            </li>
          
        </ul>
         
    }
</table>   
   
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
        {
            @:<<
            @Html.Raw(" ");
            @:< Anterior
    }

        @if (Model.HasNextPage)
        {
            @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
        {
            @:Próxima >
            @Html.Raw(" ")
            @:>>
    }
    </div>